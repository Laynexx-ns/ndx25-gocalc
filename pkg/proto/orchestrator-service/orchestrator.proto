syntax="proto3";

import "google/api/annotations.proto";
option go_package="pkg/api/orchestrator-service";

package orchestrator_service;

service OrchestratorService {
  rpc GetExpressions (GetExpressionsRequest) returns (GetExpressionsResponse) {
      option (google.api.http) = {
        get: "/api/v1/expressions/{user_id}"
      };
  }
  rpc PostExpression (PostExpressionRequest) returns (PostExpressionResponse) {
    option (google.api.http) = {
      post: "/api/v1/expressions"
      body: "*"
    };
  }
  rpc GetExpressionById (GetExpressionByIdRequest) returns (GetExpressionByIdResponse){
    option (google.api.http) = {
      get: "/api/v1/expression/{id}"
    };
  }
  rpc GetTasks (GetTasksRequest) returns (GetTasksResponse);
  rpc PostExpressionResult (PostExpressionResultRequest) returns (PostExpressionResultResponse);
}

message GetExpressionsRequest {
  string user_id = 1;
}

message  GetExpressionsResponse {
  repeated ExpressionsResponse response = 1;

}

message ExpressionsResponse {
  int32 id = 1;
  string status = 2;
  float result = 3;
  string expression = 4;
  string user_id = 5;
}

message PostExpressionRequest {
  string expression = 1;
  string user_id = 2;
}

message PostExpressionResponse {
  int32 id = 1;
}

message GetExpressionByIdRequest {
  int32 id = 1;
}

message GetExpressionByIdResponse {
  int32 id = 1;
  string status = 2;
  float result = 3;
}


message GetTasksRequest {}

message GetTasksResponse{
  int32 parentID = 1;
  int64 id = 2;
  float arg1 = 3;
  float arg2 = 4;
  string operation = 5;
  int32 operation_time = 6;
  float result = 7;
  bool error = 8;
  string completed_at = 9;
}


message PostExpressionResultRequest{
  int32 parentID = 1;
  int64 id = 2;
  float arg1 = 3;
  float arg2 = 4;
  string operation = 5;
  int32 operation_time = 6;
  float result = 7;
  bool error = 8;
  string completed_at = 9;
}

message PostExpressionResultResponse{

}