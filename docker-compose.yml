services:
  postgres:
    container_name: ndx_postgres-container
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - ./storage/postgres:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - main-network
    restart: unless-stopped
    command: [ "postgres", "-c", "listen_addresses=*" ]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root -d postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  gateway-service:
    container_name: ndx_gateway-container
    ports:
      - "8080:8080"
    build:
      context: .
      dockerfile: internal/gateway/Dockerfile
    volumes:
      - ./db/migrations:/app/db/migrations
      - ./config/config.yml:/app/config/config.yml
    networks:
      - main-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 5s
      timeout: 5s
      retries: 5


  orchestrator-service:
    container_name: ndx_orchestrator-container
    ports:
      - "50051:50051"
    build:
      context: .
      dockerfile: internal/services/orchestrator/Dockerfile
    volumes:
      - ./db/migrations:/app/db/migrations
      - ./config/config.yml:/app/config/config.yml

    networks:
      - main-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:50051"]
      interval: 5s
      timeout: 5s
      retries: 5


  agent-service:
    container_name: ndx_agent-container
    ports:
      - "50052:50052"
    build:
      context: .
      dockerfile: internal/services/agent/Dockerfile
    volumes:
      - ./db/migrations:/app/db/migrations
      - ./config/config.yml:/app/config/config.yml

    networks:
      - main-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:50052"]
      interval: 5s
      timeout: 5s
      retries: 5

  user-service:
    container_name: ndx_user-container
    ports:
      - "50053:50053"
    build:
     context: .
     dockerfile: internal/services/user-service/Dockerfile
    volumes:
      - ./db/migrations:/app/db/migrations
      - ./config/config.yml:/app/config/config.yml
    networks:
      - main-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:50053" ]
      interval: 5s
      timeout: 5s
      retries: 5




networks:
  main-network:
    driver: bridge

